% Clear previous variables and close all figures 
clc; clear all; close all; 
% Parameters 
t = -10:0.01:10; 
% Continuous time vector for plotting
T = 4; % Time period 
fm = 1 / T; % Frequency of the continuous‐time signal 
x = cos(2 * pi * fm * t); % Continuous‐time signal 
% Plot continuous‐time signal 
subplot(2, 2, 1); plot(t, x); 
xlabel('time'); 
ylabel('x(t)'); 
title('Continuous Time Signal'); 
grid on; 

% Sampling frequencies 
fs1 = 1.6 * fm; % fs < 2*fm (Aliasing occurs)
fs2 = 2 * fm; % fs = 2*fm (Nyquist rate) 
fs3 = 8 * fm; % fs > 2*fm (No aliasing) 
%Sampled discrete‐time signals % 
%Sampling at fs1 < 2*fm 

n1 = -4:1:4; 
x1 = cos(2 * pi * fm / fs1 * n1);
subplot(2, 2, 2); 
stem(n1, x1); 
xlabel('time (samples)'); 
ylabel('x[n]'); 
title(' fs < 2*fm(Aliasing)'); 
hold on; 
plot(n1, x1);
grid on; 
% Sampling at fs2 = 2*fm (Nyquist rate)
n2 = -5:1:5; 
x2 = cos(2 * pi * fm / fs2 * n2);
subplot(2, 2, 3); 
stem(n2, x2); 
xlabel('time (samples)');
ylabel('x[n]'); 
title('fs = 2*fm (Nyquist Rate)');
hold on; 
plot(n2, x2); grid on; 
% Sampling at fs3 > 2*fm (Noaliasing)  
n3 = -20:1:20; 
x3 = cos(2 * pi * fm / fs3 * n3); 
subplot(2, 2, 4); 
stem(n3,x3);
xlabel('time (samples)'); 
ylabel('x[n]'); 
title('fs > 2*fm(No Aliasing)');
hold on; 
plot(n3, x3); grid on;